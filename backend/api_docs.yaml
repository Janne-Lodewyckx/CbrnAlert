openapi: '3.0.2'
info:
  title: API Title
  version: '1.0'
servers:
  # TODO: CHANGE TO HTTPS FOR PROD
  - url: http://localhost:8000/api

components:
  schemas:
    BasicAtp45Input:
      type: object
      required:
        - "locations"
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/GeoPoint'
          description: 'Array of release points'
    WindAtp45Input:
      allOf:
        - $ref: '#/components/schemas/BasicAtp45Input'
        - type: object
          required:
            - wind
          properties:
            wind:
              $ref: '#/components/schemas/WindVelocity'
    ForecastAtp45Input:
      allOf:
        - $ref: '#/components/schemas/BasicAtp45Input'
        - type: object
          required:
            - date
          properties:
            step:
              $ref: '#/components/schemas/ForecastStep'
              description: 'Step of the forecast'
    
    WindVelocity:
      type: object
      required:
        - "speed"
        - "azimuth"
      properties:
        speed:
          type: number
          description: 'Wind speed - units [m/s]'
        azimuth:
          type: number
          description: 'angle from North - units [m/s]'
    GeoPoint:
      type: object
      required:
        - "lon"
        - "lat"
      properties:
        lon:
          type: number
          description: 'Longitude [°]'
        lat:
          type: number
          description: 'Latitude [°]'
    # TODO MBEOT: MODIFY ACCORDING TO ATP45.JL RESULT
    Atp45Result:
      type: object
      properties:
        coordinates:
          type: array
          items: 
            $ref: '#/components/schemas/GeoPoint'
    ForecastAvailableSteps:
      type: object
      required:
        - "start"
        - "leadtimes"
      properties:
        start:
          type: string
          format: date-time
        leadtimes:
          type: array
          items:
            type: string
            format: date-time
    ForecastStep:
      type: object
      required:
        - "start"
        - "leadtime"
      properties:
        start:
          type: string
          format: date-time
        leadtime:
          type: string
          format: date-time

    FlexpartRun:
      type: object
      required:
        - "uuid"
        - "name"
        - "date_created"
        - "options"
      properties:
        uuid:
          type: string
        name:
          type: string
        status:
          type: string
          $ref: '#/components/schemas/RunStatus'
        date_created:
          type: string
          format: date-time
        options:
          type: object

    FlexpartOutput:
      type: object
      required:
        - "uuid"
        - "name"
        - "date_created"
        - "metadata"
      properties:
        uuid:
          type: string
        name:
          type: string
        date_created:
          type: string
          format: date-time
        metadata:
          type: object

    RunStatus:
      type: string
      enum:
        - "created"
        - "started"
        - "ongoing"
        - "errored"

  parameters:
    runIdParam:
      in: path
      name: runId
      required: true
      schema:
        type: string
      description: The flexpart run ID
    outputIdParam:
      in: path
      name: outputId
      required: true
      schema:
        type: string
      description: The output ID
  

  securitySchemes:
    name:
      type: http
      scheme: bearer
      bearerFormat: JWTpaths

  
paths:
  /atp45/run/forecast:
    post:
      description: 'Run ATP45 with forecast wind data'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForecastAtp45Input'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Atp45Result'

  /atp45/run/wind:
    post:
      description: 'Run ATP45 with request wind data'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WindAtp45Input'
      responses:
        '200':
          description: OK
          
  /forecast/available:
    get:
      description: 'Return the last forecast datetimes available at ECMWF'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForecastAvailableSteps'

  /flexpart/runs:
    get:
      description: 'Return all the finished Flexpart runs'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlexpartRun'

  /flexpart/runs/{runId}:
    get:
      parameters:
        - $ref: '#/components/parameters/runIdParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexpartRun'

  /flexpart/runs/{runId}/outputs:
    get:
      description: 'Return the outputs of the Flexpart run `id`'
      parameters:
        - $ref: '#/components/parameters/runIdParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlexpartOutput'

  /flexpart/runs/{runId}/outputs/{outputId}:
    get:
      parameters:
        - $ref: '#/components/parameters/runIdParam'
        - $ref: '#/components/parameters/outputIdParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexpartOutput'

  /atp45/types:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string


